plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id "maven-publish"
}

allprojects {
    group "io.github.zrdzn.minecraft.greatlifesteal"
    version "1.7.1-SNAPSHOT"

    apply plugin: "maven-publish"
}

subprojects {
    apply plugin: "java"
    apply plugin: "com.github.johnrengelman.shadow"

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    compileJava.options.encoding = "UTF-8"

    repositories {
        mavenCentral()
        mavenLocal()

        maven {
            name "spigot-repository"
            url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        }

        maven {
            name "sonatype-repository"
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }

        maven {
            name "reposilite-repository"
            url "https://maven.reposilite.com/maven-central"
        }

        maven {
            name "panda-repository"
            url "https://repo.panda-lang.org/releases"
        }
    }

    publishing {
        repositories {
            maven {
                if (version.toString().endsWith("-SNAPSHOT")) {
                    name = "snapshots"
                    url = uri("https://repo.titanvale.net/snapshots")

                    def snapshotsUsername = System.getenv("SNAPSHOTS_USERNAME")
                    def snapshotsPassword = System.getenv("SNAPSHOTS_PASSWORD")
                    if (snapshotsUsername != null && snapshotsPassword != null) {
                        credentials {
                            username = snapshotsUsername
                            password = snapshotsPassword
                        }
                    } else {
                        credentials(PasswordCredentials)
                    }
                } else {
                    name = "releases"
                    url = uri("https://repo.titanvale.net/releases")

                    def releasesUsername = System.getenv("RELEASES_USERNAME")
                    def releasesPassword = System.getenv("RELEASES_PASSWORD")
                    if (releasesUsername != null && releasesPassword != null) {
                        credentials {
                            username = releasesUsername
                            password = releasesPassword
                        }
                    } else {
                        credentials(PasswordCredentials)
                    }
                }

                authentication {
                    basic(BasicAuthentication)
                }
            }
            publications {
                libraries(MavenPublication) {
                    from components.java

                    pom.withXml {
                        def repositories = asNode().appendNode("repositories")

                        project.getRepositories().findAll { repo ->
                            if (repo.getUrl().toString().startsWith("http")) {
                                def repository = repositories.appendNode("repository")
                                repository.appendNode("id", repo.getDisplayName())
                                repository.appendNode("url", repo.getUrl().toString())
                            }
                        }
                    }
                }
            }
        }
    }
}
